name: Docker Image
on:
  push:
    tags: ["v*.*.*"]
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/debian-bookworm-arm64

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        id: build
        with:
          platforms: linux/arm64
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Save Docker Image as Tar
        run: |
              # Strip git ref prefix from version
              VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
              IMAGE_NAME=$(echo ${{ env.IMAGE_NAME }} | tr '[A-Z]' '[a-z]')
              mkdir debian && docker pull ${{ env.REGISTRY }}/$IMAGE_NAME:$VERSION && docker save ${{ env.REGISTRY }}/$IMAGE_NAME:$VERSION | gzip > debian/debian-bookworm.tar.gz

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "debian/debian-bookworm.tar.gz"
          tag: v0.1
          token: ${{ secrets.ghcr }}
          allowUpdates: true
